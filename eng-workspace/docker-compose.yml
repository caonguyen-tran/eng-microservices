version: "3"
services:
  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka
    hostname: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://35.243.98.26:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - engapp-network

  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    hostname: eureka-server
    ports:
      - '8761:8761'
    environment:
      - EUREKA_SERVER_PORT=8761
    depends_on:
      - kafka
    networks:
      - engapp-network

  mongodb:
    image: 'bitnami/mongodb:8.0.1'
    container_name: mongodb
    hostname: mongodb
    environment:
      MONGODB_ROOT_USERNAME: root
      MONGODB_ROOT_PASSWORD: Admin@123
    ports:
      - '27017:27017'
    volumes:
      - ./docker/mongodb_data:/data/db
      - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - engapp-network

  mysql:
    image: 'bitnami/mysql:8.0'
    container_name: mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_USERNAME: root
      MYSQL_ROOT_PASSWORD: Admin@123
    ports:
      - '3307:3306'
    volumes:
      - myapp:/home/node/app
    networks:
      - engapp-network

networks:
  engapp-network:
    driver: bridge
    external: true

volumes:
  myapp:
    external: true


#version: '3.8'
#
#services:
#  user-service:
#    image: user-service:latest
#    container_name: user-service
#    restart: always
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/userdb
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=rootpassword
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#      - SPRING_JPA_SHOW_SQL=true
#      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
#    depends_on:
#      - mysql
#    networks:
#      - app-network
#    ports:
#      - "8080:8080"
#
#  quiz-service:
#    image: quiz-service:latest
#    container_name: quiz-service
#    restart: always
#    environment:
#      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/quizdb
#    depends_on:
#      - mongodb
#    networks:
#      - app-network
#    ports:
#      - "8081:8081"
#
#  mysql:
#    image: mysql:8.0
#    container_name: mysql
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: rootpassword
#      MYSQL_DATABASE: userdb
#    volumes:
#      - mysql-data:/var/lib/mysql
#    networks:
#      - app-network
#    ports:
#      - "3306:3306"
#
#  mongodb:
#    image: mongo:6.0
#    container_name: mongodb
#    restart: always
#    volumes:
#      - mongodb-data:/data/db
#    networks:
#      - app-network
#    ports:
#      - "27017:27017"
#
#networks:
#  app-network:
#    driver: bridge
#
#volumes:
#  mysql-data:
#    driver: local
#  mongodb-data:
#    driver: local